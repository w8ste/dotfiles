#    -*- mode: org -*-


Archived entries from file /home/hannes/.config/emacs/config.org


* Keybindings
:PROPERTIES:
:ARCHIVE_TIME: 2023-09-08 Fri 01:02
:ARCHIVE_FILE: ~/.config/emacs/config.org
:ARCHIVE_OLPATH: Important programs
:ARCHIVE_CATEGORY: config
:END:
#+begin_src emacs-lisp

  (use-package general
  :config
  (general-evil-setup)

  (general-create-definer w8ste/control
	:prefix "<C>" )
  (w8ste/control
  	"c" '(evil-insert-state-map))
#+end_src

* Load Evil Mode
:PROPERTIES:
:ARCHIVE_TIME: 2023-09-08 Fri 01:33
:ARCHIVE_FILE: ~/.config/emacs/config.org
:ARCHIVE_OLPATH: Important programs
:ARCHIVE_CATEGORY: config
:END:
#+begin_src emacs-lisp
  ;; Install use-package support
  (elpaca elpaca-use-package
    ;; Enable :elpaca use-package keyword.
    (elpaca-use-package-mode)
    ;; Assume :elpaca t unless otherwise specified.
    (setq elpaca-use-package-by-default t))

  ;; Block until current queue processed.
  (elpaca-wait)

  ;;When installing a package which modifies a form used at the top-level
  ;;(e.g. a package which adds a use-package key word),
  ;;use `elpaca-wait' to block until that package has been installed/configured.
  ;;For example:
  ;;(USE-package general :demand t)
  ;;(elpaca-wait)
  (use-package evil
    :init
    (setq evil-want-integration t)
    (setq evil-want-keybinding nil)
    (setq evil-vsplit-window-right t)
    (setq evil-split-window-below t)
    (evil-mode))
  (use-package evil-collection
    :after evil
    :config
    (setq evil-collection-mode-list '(dashboard dired ibuffer))
    (evil-collection-init))
  ;;Turns off elpaca-use-package-mode current declartion
  ;;Note this will cause the declaration to be interpreted immediately (not deferred).
  ;;Useful for configuring built-in emacs features.
  (use-package emacs :elpaca nil :config (setq ring-bell-function #'ignore))

  ;; Don't install anything. Defer execution of BODY
  (elpaca nil (message "deferred"))
#+end_src

#+begin_src emacs-lisp
      (use-package general
	:config
	(general-evil-setup)
	 ;; set up 'SPC' as the global leader key
      (general-create-definer dt/leader-keys
	:states '(normal insert visual emacs)
	:keymaps 'override
	:prefix "Control" ;; set leader
	:global-prefix "M-SPC") ;; access leader in insert mode

      (dt/leader-keys
	"b" '(:ignore t :wk "buffer")
	"bb" '(evil-normal-state :wk "Switch buffer")
	"bk" '(kill-this-buffer :wk "Kill this buffer")
	"bn" '(next-buffer :wk "Next buffer")
	"bp" '(previous-buffer :wk "Previous buffer")
	"br" '(revert-buffer :wk "Reload buffer"))

	(general-create-definer w8ste/control
	   :prefix "<C>")
	(w8ste/control
	    "c" '(evil-normal-state))
  )

#+end_src

#+RESULTS:
